# Generated by Django 5.1.2 on 2024-10-17 13:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CorreoElectronicoContacto',
            fields=[
                ('id_ccelectronico', models.SmallAutoField(primary_key=True, serialize=False)),
                ('correo_electronico', models.EmailField(max_length=100)),
                ('autoriza_envio', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Datos de contacto',
                'db_table': 'eco_sis_ccelectronico',
            },
        ),
        migrations.CreateModel(
            name='DatosbasicosColectivos',
            fields=[
                ('id_bcolectivos', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Datos básicos del id_bcolectivos',
                'db_table': 'eco_sis_dbcolectivo',
            },
        ),
        migrations.CreateModel(
            name='DatosUbicacion',
            fields=[
                ('id_ubicacion', models.AutoField(primary_key=True, serialize=False)),
                ('direccion', models.CharField(blank=True, max_length=160, null=True)),
                ('indicacion', models.CharField(blank=True, max_length=160, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name_plural': 'Datos de ubicación',
                'db_table': 'eco_sis_ubicacion',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id_departamento', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_departamento', models.CharField(max_length=85)),
            ],
            options={
                'verbose_name_plural': 'Departamentos',
                'db_table': 'eco_ext_departamento',
            },
        ),
        migrations.CreateModel(
            name='Eps',
            fields=[
                ('id_eps', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_eps', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Eps',
                'db_table': 'eco_bas_eps',
            },
        ),
        migrations.CreateModel(
            name='EstadoCivil',
            fields=[
                ('id_ecivil', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_ecivil', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Estado civil',
                'db_table': 'eco_bas_estadocivil',
            },
        ),
        migrations.CreateModel(
            name='FechaNacimientoPersona',
            fields=[
                ('id_fnacimiento', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Fecha de nacimiento de la persona',
                'db_table': 'eco_sis_fnpersona',
            },
        ),
        migrations.CreateModel(
            name='FondoPensiones',
            fields=[
                ('id_fpensiones', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_fpensiones', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Fondo de pensiones',
                'db_table': 'eco_bas_fpensiones',
            },
        ),
        migrations.CreateModel(
            name='GpRh',
            fields=[
                ('id_grh', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_grh', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Grupo rh',
                'db_table': 'eco_bas_gruporh',
            },
        ),
        migrations.CreateModel(
            name='IdentificacionPersona',
            fields=[
                ('id_ipersona', models.AutoField(primary_key=True, serialize=False)),
                ('numero_identificacion', models.CharField(blank=True, max_length=20)),
                ('fecha_expedicion', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'Datos de la identificación de la persona',
                'db_table': 'eco_sis_ipersona',
            },
        ),
        migrations.CreateModel(
            name='IdentificacionRepresentanteLegalMenor',
            fields=[
                ('id_irepresentante', models.AutoField(primary_key=True, serialize=False)),
                ('numero_irepresentante', models.CharField(blank=True, max_length=20)),
                ('fecha_exrepresentante', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'Datos de la identificación del representante legal',
                'db_table': 'eco_sis_rrepresentante',
            },
        ),
        migrations.CreateModel(
            name='NombreApellidoPersonaColectivo',
            fields=[
                ('id_napcolectivo', models.AutoField(primary_key=True, serialize=False)),
                ('primer_npcolectivo', models.CharField(max_length=20)),
                ('segundo_npcolectivo', models.CharField(blank=True, max_length=50, null=True)),
                ('primer_apcolectivo', models.CharField(max_length=50)),
                ('segundo_apcolectivo', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Nombres y apellidos de las personas del colectivo',
                'db_table': 'eco_sis_napcolectivo',
            },
        ),
        migrations.CreateModel(
            name='NombreColectivo',
            fields=[
                ('id_ncolectivo', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_colectivo', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'Tipos de colectivos',
                'db_table': 'eco_sis_ncolectivo',
            },
        ),
        migrations.CreateModel(
            name='NombrePersona',
            fields=[
                ('id_npersona', models.AutoField(primary_key=True, serialize=False)),
                ('primer_nombre', models.CharField(max_length=20)),
                ('segundo_nombre', models.CharField(blank=True, max_length=50, null=True)),
                ('primer_apellido', models.CharField(max_length=50)),
                ('segundo_apellido', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Nombres y apellidos de las personas',
                'db_table': 'eco_sis_nombrepersona',
            },
        ),
        migrations.CreateModel(
            name='NombreRepresentanteLegalMenor',
            fields=[
                ('id_nrepresentante', models.AutoField(primary_key=True, serialize=False)),
                ('primer_nrepresentante', models.CharField(max_length=50)),
                ('segundo_nrepresentante', models.CharField(blank=True, max_length=50, null=True)),
                ('primer_arepresentante', models.CharField(max_length=50)),
                ('segundo_arepresentante', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Nombres y apellidos del representante legal',
                'db_table': 'eco_sis_nrepresentante',
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id_pais', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_pais', models.CharField(max_length=170)),
                ('es_colombia', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Países',
                'db_table': 'eco_ext_pais',
            },
        ),
        migrations.CreateModel(
            name='TelefonoCelularContacto',
            fields=[
                ('id_ctelefono', models.SmallAutoField(primary_key=True, serialize=False)),
                ('celular_uno', models.CharField(blank=True, max_length=15, null=True)),
                ('celular_dos', models.CharField(blank=True, max_length=15, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name_plural': 'Datos de contacto',
                'db_table': 'eco_sis_ctelefono',
            },
        ),
        migrations.CreateModel(
            name='TipoFactorDiferencial',
            fields=[
                ('id_tfdiferencial', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_tfdiferencial', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Tipo de factor diferencial',
                'db_table': 'eco_bas_tipofdiferencial',
            },
        ),
        migrations.CreateModel(
            name='TipoGenero',
            fields=[
                ('id_tgenero', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_tgenero', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Tipo de género',
                'db_table': 'eco_bas_tipogenero',
            },
        ),
        migrations.CreateModel(
            name='TipoIdentificacion',
            fields=[
                ('id_tidentificacion', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_tidentificacion', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Tipo de identificación',
                'db_table': 'eco_bas_tipoidentificacion',
            },
        ),
        migrations.CreateModel(
            name='TipoIdentificacionColectivo',
            fields=[
                ('id_ticolectivo', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_ticolectivo', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Tipo de identificacion de colectivos',
                'db_table': 'eco_bas_ticolectivo',
            },
        ),
        migrations.CreateModel(
            name='TipoOrientacionSexual',
            fields=[
                ('id_torientacion', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_torientacion', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Tipo de orientación sexual',
                'db_table': 'eco_bas_tipoorientacion',
            },
        ),
        migrations.CreateModel(
            name='TipoRangoEtario',
            fields=[
                ('id_tretario', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_tretario', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Tipos de rangos etarios',
                'db_table': 'eco_bas_tiporetario',
            },
        ),
        migrations.CreateModel(
            name='TipoSexo',
            fields=[
                ('id_tsexo', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_tsexo', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Tipo de sexo',
                'db_table': 'eco_bas_tiposexo',
            },
        ),
        migrations.CreateModel(
            name='ZonaUbicacion',
            fields=[
                ('id_zubicacion', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_zubicacion', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Zona de ubicación',
                'db_table': 'eco_bas_zonaubicacion',
            },
        ),
        migrations.CreateModel(
            name='cantidadSexo',
            fields=[
                ('id_csexo', models.AutoField(primary_key=True, serialize=False)),
                ('cantidad_mujer', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('cantidad_hombre', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('cantidad_intersexual', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('colectivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.datosbasicoscolectivos')),
            ],
            options={
                'verbose_name_plural': 'Cantidad de personas por generos del colectivo',
                'db_table': 'eco_sis_csexo',
            },
        ),
        migrations.CreateModel(
            name='cantidadGenero',
            fields=[
                ('id_cgenero', models.AutoField(primary_key=True, serialize=False)),
                ('cantidad_femenino', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('cantidad_masculino', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('cantidad_nobinario', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('colectivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.datosbasicoscolectivos')),
            ],
            options={
                'verbose_name_plural': 'Cantidad de personas por generos del colectivo',
                'db_table': 'eco_sis_cgenero',
            },
        ),
        migrations.CreateModel(
            name='direccionUrbana',
            fields=[
                ('datosubicacion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sistema.datosubicacion')),
                ('nombre_barrio', models.CharField(blank=True, max_length=100, null=True)),
                ('tipo_viaprincipal', models.CharField(blank=True, max_length=20, null=True)),
                ('numero_viaprincipal', models.IntegerField(blank=True, null=True)),
                ('letra_principal', models.CharField(blank=True, max_length=10, null=True)),
                ('es_bis', models.BooleanField(null=True)),
                ('cuadrante_principal', models.CharField(blank=True, max_length=10, null=True)),
                ('numero_viasecundaria', models.IntegerField(blank=True, null=True)),
                ('letra_secundaria', models.CharField(blank=True, max_length=10, null=True)),
                ('cuadrante_secundario', models.CharField(blank=True, max_length=10, null=True)),
                ('numero_placa', models.IntegerField(blank=True, null=True)),
                ('complemento', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'verbose_name_plural': 'Dirección urbana',
                'db_table': 'eco_sis_direccionurbana',
            },
            bases=('sistema.datosubicacion',),
        ),
        migrations.CreateModel(
            name='UbicacionRural',
            fields=[
                ('datosubicacion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sistema.datosubicacion')),
                ('corregimiento', models.CharField(blank=True, max_length=150, null=True)),
                ('centro_poblado', models.CharField(blank=True, max_length=150, null=True)),
                ('vereda', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'Dirección rural',
                'db_table': 'eco_sis_direccionrural',
            },
            bases=('sistema.datosubicacion',),
        ),
        migrations.AddField(
            model_name='datosubicacion',
            name='departamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.departamento'),
        ),
        migrations.CreateModel(
            name='FileDocumentoIdentidad',
            fields=[
                ('id_fdocumento', models.AutoField(primary_key=True, serialize=False)),
                ('file_documento', models.FileField(blank=True, null=True, upload_to='documento_identidad/')),
                ('id_ipersona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.identificacionpersona')),
            ],
            options={
                'verbose_name_plural': 'Archivo del documento de identidad',
                'db_table': 'eco_doc_fdidentidad',
            },
        ),
        migrations.CreateModel(
            name='DatosBasicosPersona',
            fields=[
                ('id_persona', models.AutoField(primary_key=True, serialize=False)),
                ('identificacion_persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.identificacionpersona')),
                ('nombre_persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.nombrepersona')),
                ('genero_persona', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sistema.tipogenero')),
            ],
            options={
                'verbose_name_plural': 'Datos básicos de la persona',
                'db_table': 'eco_sis_basicospersona',
            },
        ),
        migrations.CreateModel(
            name='InformaciónColectivoFactorDiferencial',
            fields=[
                ('id_icfdiferencial', models.AutoField(primary_key=True, serialize=False)),
                ('tiene_pdiscapacidad', models.BooleanField(blank=True, default=False, null=True)),
                ('tiene_pindigenas', models.BooleanField(blank=True, default=False, null=True)),
                ('tiene_pafrocolombiano', models.BooleanField(blank=True, default=False, null=True)),
                ('tiene_pnegro', models.BooleanField(blank=True, default=False, null=True)),
                ('tiene_praizal', models.BooleanField(blank=True, default=False, null=True)),
                ('tiene_ppalenquero', models.BooleanField(blank=True, default=False, null=True)),
                ('tiene_prongitano', models.BooleanField(blank=True, default=False, null=True)),
                ('colectivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.datosbasicoscolectivos')),
            ],
            options={
                'verbose_name_plural': 'Información del colectivo factor diferencial',
                'db_table': 'eco_sis_icfdiferencial',
            },
        ),
        migrations.CreateModel(
            name='LugarNacimientoPersona',
            fields=[
                ('id_lnacimiento', models.AutoField(primary_key=True, serialize=False)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.departamento')),
            ],
            options={
                'verbose_name_plural': 'Lugar de nacimiento de la persona',
                'db_table': 'eco_sis_lnpersona',
            },
        ),
        migrations.CreateModel(
            name='DatosNacimientoPersona',
            fields=[
                ('id_dnacimiento', models.AutoField(primary_key=True, serialize=False)),
                ('persona', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sistema.datosbasicospersona')),
                ('fecha_npersona', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sistema.fechanacimientopersona')),
                ('Lugar_npersona', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sistema.lugarnacimientopersona')),
            ],
            options={
                'verbose_name_plural': 'Datos de nacimiento de la persona',
                'db_table': 'eco_sis_dnpersona',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id_municipio', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_municipio', models.CharField(max_length=85)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.departamento')),
            ],
            options={
                'verbose_name_plural': 'Municipios',
                'db_table': 'eco_ext_municipio',
            },
        ),
        migrations.AddField(
            model_name='lugarnacimientopersona',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.municipio'),
        ),
        migrations.AddField(
            model_name='datosubicacion',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.municipio'),
        ),
        migrations.AddField(
            model_name='datosbasicoscolectivos',
            name='nombre_colectivo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.nombrecolectivo'),
        ),
        migrations.CreateModel(
            name='DatosRepresentanteLegalMenor',
            fields=[
                ('id_rrepresentante', models.AutoField(primary_key=True, serialize=False)),
                ('persona', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sistema.datosbasicospersona')),
                ('identificacion_rrepresentante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.identificacionrepresentantelegalmenor')),
                ('nombre_rrepresentante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.nombrerepresentantelegalmenor')),
            ],
            options={
                'verbose_name_plural': 'Datos del representante legal',
                'db_table': 'eco_sis_representantelegal',
            },
        ),
        migrations.AddField(
            model_name='lugarnacimientopersona',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.pais'),
        ),
        migrations.AddField(
            model_name='departamento',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.pais'),
        ),
        migrations.AddField(
            model_name='datosubicacion',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.pais'),
        ),
        migrations.CreateModel(
            name='PersonaColectivo',
            fields=[
                ('id_pcolectivo', models.AutoField(primary_key=True, serialize=False)),
                ('es_representante', models.BooleanField(default=False)),
                ('esta_activo', models.BooleanField(default=True)),
                ('colectivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.datosbasicoscolectivos')),
                ('nombre_pcolectivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.nombreapellidopersonacolectivo')),
            ],
            options={
                'verbose_name_plural': 'Datos personales de las personas del colectivo',
                'db_table': 'eco_sis_pcolectivo',
            },
        ),
        migrations.CreateModel(
            name='DatosContacto',
            fields=[
                ('id_contacto', models.SmallAutoField(primary_key=True, serialize=False)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('id_ccelectronico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.correoelectronicocontacto')),
                ('id_ctelefono', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.telefonocelularcontacto')),
            ],
            options={
                'verbose_name_plural': 'Datos de contacto',
                'db_table': 'eco_sis_contacto',
            },
        ),
        migrations.AddField(
            model_name='identificacionrepresentantelegalmenor',
            name='tipo_irepresentante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.tipoidentificacion'),
        ),
        migrations.CreateModel(
            name='IdentificacionPersonaColectivo',
            fields=[
                ('id_ipcolectivo', models.AutoField(primary_key=True, serialize=False)),
                ('numero_ipcolectivo', models.CharField(blank=True, max_length=20)),
                ('fecha_expedicion', models.DateField(blank=True, null=True)),
                ('tipo_identificacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.tipoidentificacion')),
            ],
            options={
                'verbose_name_plural': 'Datos de la identificación de la persona del colectivo',
                'db_table': 'eco_sis_ipcolectivo',
            },
        ),
        migrations.AddField(
            model_name='identificacionpersona',
            name='tipo_identificacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.tipoidentificacion'),
        ),
        migrations.CreateModel(
            name='IdentificacionColectivo',
            fields=[
                ('id_icolectivo', models.AutoField(primary_key=True, serialize=False)),
                ('numero_icolectivo', models.CharField(blank=True, max_length=20, null=True)),
                ('colectivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.datosbasicoscolectivos')),
                ('tipo_icolectivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.tipoidentificacioncolectivo')),
            ],
            options={
                'verbose_name_plural': 'Identificacion del colectivo',
                'db_table': 'eco_sis_icolectivo',
            },
        ),
        migrations.CreateModel(
            name='DatosComplemetariosPersona',
            fields=[
                ('id_complementarios', models.SmallAutoField(primary_key=True, serialize=False)),
                ('tiene_discapacidad', models.BooleanField(default=False)),
                ('pertenece_getnico', models.BooleanField(default=False)),
                ('pertenece_organizacion', models.BooleanField(default=False)),
                ('tiene_mcautelar', models.BooleanField(default=False)),
                ('registra_tercero', models.BooleanField(default=False)),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.datosbasicospersona')),
                ('factor_diferencial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.tipofactordiferencial')),
                ('orientacion_sexual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.tipoorientacionsexual')),
                ('rango_etario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.tiporangoetario')),
                ('sexo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.tiposexo')),
            ],
            options={
                'verbose_name_plural': 'Datos complementarios de la persona',
                'db_table': 'eco_sis_cpersona',
            },
        ),
        migrations.CreateModel(
            name='TotalIntegrantes',
            fields=[
                ('id_tintegrantes', models.AutoField(primary_key=True, serialize=False)),
                ('total_integrantes', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('colectivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.datosbasicoscolectivos')),
            ],
            options={
                'verbose_name_plural': 'Cantidad aproximada de integrantes del colectivo',
                'db_table': 'eco_sis_tintegrantes',
            },
        ),
        migrations.AddField(
            model_name='datosubicacion',
            name='zona',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.zonaubicacion'),
        ),
        migrations.CreateModel(
            name='PersonaColectivoRepresentante',
            fields=[
                ('personacolectivo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sistema.personacolectivo')),
                ('identificacion_pcolectivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema.identificacionpersonacolectivo')),
                ('sexo_pcolectivo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sistema.tiposexo')),
            ],
            options={
                'verbose_name_plural': 'Datos personales del representante del colectivo',
                'db_table': 'eco_sis_prcolectivo',
            },
            bases=('sistema.personacolectivo',),
        ),
    ]
